<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="255" failures="0" errors="0" time="7.328">
    <testsuite name="tests/bde001-proposal-voting.test.ts" timestamp="2025-02-11T09:40:56.097Z" hostname="Mikes-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.025">
        <testcase classname="tests/bde001-proposal-voting.test.ts" name="bde001-proposal-voting contract &gt; ensures the contract is deployed" time="0.004">
        </testcase>
        <testcase classname="tests/bde001-proposal-voting.test.ts" name="bde001-proposal-voting contract &gt; core-propose - can set new sunset height" time="0.021">
            <system-out>
heightAfter:  { type: [33m1[39m, value: [33m237n[39m }

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/categorical/categorical.test.ts" timestamp="2025-02-11T09:40:56.097Z" hostname="Mikes-MacBook-Pro.local" tests="14" failures="0" errors="0" skipped="0" time="0.295">
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; create binary market ok" time="0.016">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.019">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.019">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.022">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; resolve ok" time="0.022">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.023">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; claim loser ok" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/categorical/categorical.test.ts" name="claiming errors &gt; claim winner ok" time="0.026">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/gating/account-gating.test.ts" timestamp="2025-02-11T09:40:56.099Z" hostname="Mikes-MacBook-Pro.local" tests="23" failures="0" errors="0" skipped="0" time="0.492">
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; create binary market ok" time="0.017">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.02">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.022">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.025">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; claim loser ok" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="claiming errors &gt; claim winner ok" time="0.029">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; err-expecting-merkle-root-for-poll" time="0.017">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; err-unauthorised" time="0.016">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; ensure bde022 is valid extension" time="0.015">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; can call set-merkle-root via proposal" time="0.022">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; can&apos;t call create-market with invalid merkle lookup key" time="0.022">
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; deployer can create-market if dao bootstrapped" time="0.018">
            <system-out>
bde023-market-predicting: 0x548bbe4cdf9ba84d53315dc3802e9665b6351d53ae24372e9b6f01b33bd7b684 root= 0x26067618f71da1da6fa33c9b7f8d989b87f71ade892e1c55ce3b46ac79a7e64e

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; alice cannot create-market if dao bootstrapped" time="0.018">
            <system-out>
bde023-market-predicting: 0x548bbe4cdf9ba84d53315dc3802e9665b6351d53ae24372e9b6f01b33bd7b684 root= 0x26067618f71da1da6fa33c9b7f8d989b87f71ade892e1c55ce3b46ac79a7e64e

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; GENERATE TESTNET MERKLE ROOTS FOR MARKET CREATION" time="0.019">
            <system-out>
GENERATE TESTNET MERKLE ROOTS FOR MARKET CREATION: bde023-market-predicting: 0x736d59014b59c46951915098f6ca02c623b9d696a918060caad7af01bff5c650 root= 0x32052e1600fb0b2cf53566c79b129a1c0aea9b5f254de08ad26eb7fbfbaffbf3

            </system-out>
        </testcase>
        <testcase classname="tests/gating/account-gating.test.ts" name="gating market  creation &gt; can create-market with valid merkle proof" time="0.038">
            <system-out>
lookupRootKey=548bbe4cdf9ba84d53315dc3802e9665b6351d53ae24372e9b6f01b33bd7b684
ddv:  [90mundefined[39m
ddv:  [90mundefined[39m
ddv:  [90mundefined[39m
ddv:  [90mundefined[39m
ddv:  [90mundefined[39m

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/governance/initial-allocation.test.ts" timestamp="2025-02-11T09:40:56.100Z" hostname="Mikes-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.882">
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; User is not recipient" time="0.016">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; check initial recipients" time="0.017">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; cannot reset allocation directly" time="0.015">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; can reset allocation via dao" time="0.022">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; cannot claim before cliff" time="0.13">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; can claim after cliff" time="0.235">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; can claim incrementally after cliff" time="0.319">
        </testcase>
        <testcase classname="tests/governance/initial-allocation.test.ts" name="initial distribution &gt; cannot reset allocation after first claim made" time="0.128">
        </testcase>
    </testsuite>
    <testsuite name="tests/governance/staged-release.test.ts" timestamp="2025-02-11T09:40:56.100Z" hostname="Mikes-MacBook-Pro.local" tests="10" failures="0" errors="0" skipped="0" time="0.241">
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; buying is blocked before initialisation" time="0.004">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; cannot directly initialisate" time="0.016">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; check initial variables" time="0.02">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; cannot claim before initialisation" time="0.02">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; only dao can advance stage" time="0.019">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; cannot advance beyond last stage" time="0.045">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; cannot exceed stage limit" time="0.02">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; payout is determined by stage ratio" time="0.045">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; cancel prevent buy" time="0.024">
        </testcase>
        <testcase classname="tests/governance/staged-release.test.ts" name="initial distribution &gt; cancel enable refund" time="0.028">
            <system-out>
balance: bdg:  [33m1000025000n[39m
balance: idoPurchase:  { type: [33m10[39m, value: { type: [33m1[39m, value: [33m25000n[39m } }
balance: stx: 99999999995000
balance: idoPurchase:  { type: [33m10[39m, value: { type: [33m1[39m, value: [33m25000n[39m } }

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/claims-with-market-fee.test.ts" timestamp="2025-02-11T09:40:56.101Z" hostname="Mikes-MacBook-Pro.local" tests="15" failures="0" errors="0" skipped="0" time="0.341">
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; err too few categories" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; create binary market ok" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; create ok" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.022">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; create and stake ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; claim loser ok" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="claiming errors &gt; claim winner ok" time="0.028">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims-with-market-fee.test.ts" name="successful claim &gt; bob wins 50% of pool" time="0.025">
            <system-out>
contractBalance 215: 9900
contractBalance 272: 4950
contractBalance 285: 0

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/claims.test.ts" timestamp="2025-02-11T09:40:56.102Z" hostname="Mikes-MacBook-Pro.local" tests="21" failures="0" errors="0" skipped="0" time="0.414">
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; create binary market ok" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.021">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; claim loser ok" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; claim winner ok" time="0.027">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err-market-not-found" time="0.017">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err-user-balance-unknown" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err-market-not-concluded" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err-user-not-winner" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err-winning-pool-is-zero" time="0.004">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="claiming errors &gt; err-market-not-concluded" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/claims.test.ts" name="successful claim &gt; bob wins 50% of pool" time="0.025">
            <system-out>
contractBalance 215: 9900
contractBalance 272: 4950
contractBalance 285: 0

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/create-market-fees.test.ts" timestamp="2025-02-11T09:40:56.103Z" hostname="Mikes-MacBook-Pro.local" tests="19" failures="0" errors="0" skipped="0" time="0.445">
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; err too few categories" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; create binary market ok" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; create and stake ok" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.021">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; claim loser ok" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="claiming errors &gt; claim winner ok" time="0.028">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="prediction contract &gt; ensure creation fee is paid" time="0.022">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="prediction contract &gt; ensure create market fee is paid" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="prediction contract &gt; ensure market fee cant exceed max" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="prediction contract &gt; ensure betty pays the market creat fee of 1000 but receives 10% of alice winnings" time="0.032">
            <system-out>
assertUserBalance: ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM100000000000000
root=5f24649277af2f6364faf35827dffe12b85f2f1dca5ae92733c72af91455aa64
lookupRootKey=548bbe4cdf9ba84d53315dc3802e9665b6351d53ae24372e9b6f01b33bd7b684
contractBalance : bde023-market-predicting : 9500
assertUserBalance: ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD599999999998075
assertUserBalance: ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.bde022-market-gating950
assertUserBalance: ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM100000000000000
contractBalance : bde023-market-predicting : 0
contractBalance : bde006-treasury : 1475

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/create-market-fees.test.ts" name="prediction contract &gt; ensure fees are correct with 4 users" time="0.044">
            <system-out>
assertUserBalance: ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM100000000000000
root=5f24649277af2f6364faf35827dffe12b85f2f1dca5ae92733c72af91455aa64
lookupRootKey=548bbe4cdf9ba84d53315dc3802e9665b6351d53ae24372e9b6f01b33bd7b684
contractBalance : bde023-market-predicting : 380000000
assertUserBalance: ST1SJ3DTE5DN7X54YDH5D64R3BCB6A2AG2ZQ8YPD599999900000000
assertUserBalance: ST2NEB84ASENDXKYGJPQW86YXQCEFEX2ZQPG87ND99999999999000
assertUserBalance: ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM100000000000000
contractBalance : bde023-market-predicting : 0
contractBalance : bde006-treasury : 19001000

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/create-market.test.ts" timestamp="2025-02-11T09:40:56.104Z" hostname="Mikes-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.029">
        <testcase classname="tests/predictions/create-market.test.ts" name="prediction contract &gt; ensures the contract is deployed" time="0.004">
        </testcase>
        <testcase classname="tests/predictions/create-market.test.ts" name="prediction contract &gt; setup market with market share type works" time="0.025">
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/resolving.test.ts" timestamp="2025-02-11T09:40:56.104Z" hostname="Mikes-MacBook-Pro.local" tests="19" failures="0" errors="0" skipped="0" time="0.409">
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; create binary market ok" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; claim loser ok" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="claiming errors &gt; claim winner ok" time="0.028">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="resolving errors &gt; only dev can resolve" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="resolving errors &gt; err-market-not-found" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="resolving errors &gt; err-already-concluded" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="resolve market &gt; resolve market yes" time="0.022">
        </testcase>
        <testcase classname="tests/predictions/resolving.test.ts" name="resolve market &gt; resolve market no bids" time="0.025">
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/scenarios.test.ts" timestamp="2025-02-11T09:40:56.105Z" hostname="Mikes-MacBook-Pro.local" tests="19" failures="0" errors="0" skipped="0" time="0.448">
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; create binary market ok" time="0.017">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; create ok" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; create and stake ok" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.022">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; claim loser ok" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="claiming errors &gt; claim winner ok" time="0.028">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="check actual claims vs expected for some scenarios &gt; Alice stake 100STX on YES, market resolves yes" time="0.021">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="check actual claims vs expected for some scenarios &gt; Alice stakes 100STX on yes, Bob 100STX on NO market resolves yes" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="check actual claims vs expected for some scenarios &gt; Alice stakes 100 STX on YES, Bob stakes 50 STX on YES, Tom stakes 200 STX on NO, Annie stakes 20 STX on NO, market resolves NO" time="0.033">
            <system-out>
contractBalance: 544500000
contractBalance: 0

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="Alice stakes 100 STX on YES, Bob stakes 50 STX on YES, Tom stakes 200 STX on NO, Annie stakes 20 STX on NO, market resolves NO" time="0.027">
            <system-out>
contractBalance: 39600000000000
contractBalance: 0

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/scenarios.test.ts" name="Alice stakes 100 STX on YES, Bob stakes 50 STX on YES, Tom stakes 200 STX on NO, Annie stakes 20 STX on NO, market resolves NO" time="0.042">
            <system-out>
contractBalance: 84150000990000
contractBalance: 44550000990000
contractBalance: 39600000000000
contractBalance 32: 19800000000000
contractBalance 32: 0

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/predictions/staking.test.ts" timestamp="2025-02-11T09:40:56.106Z" hostname="Mikes-MacBook-Pro.local" tests="19" failures="0" errors="0" skipped="0" time="0.393">
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; create binary market ok" time="0.016">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.021">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; resolve ok" time="0.022">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; claim loser ok" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="claiming errors &gt; claim winner ok" time="0.028">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="prediction errors &gt; user can&apos;t commit more than their balance" time="0.018">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="prediction errors &gt; err-already-concluded" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="prediction fees and stakes &gt; user transfers exact stake" time="0.019">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="prediction fees and stakes &gt; fees are collected up front from prediction stakes" time="0.02">
        </testcase>
        <testcase classname="tests/predictions/staking.test.ts" name="prediction fees and stakes &gt; alice hedges yes and no" time="0.019">
        </testcase>
    </testsuite>
    <testsuite name="tests/sbtc/claims.test.ts" timestamp="2025-02-11T09:40:56.107Z" hostname="Mikes-MacBook-Pro.local" tests="21" failures="0" errors="0" skipped="0" time="0.439">
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; create binary market ok" time="0.017">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.02">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; claim loser ok" time="0.026">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; claim winner ok" time="0.029">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err-market-not-found" time="0.02">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err-user-balance-unknown" time="0.018">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err-market-not-concluded" time="0.021">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err-user-not-winner" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err-winning-pool-is-zero" time="0.003">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="claiming errors &gt; err-market-not-concluded" time="0.021">
        </testcase>
        <testcase classname="tests/sbtc/claims.test.ts" name="successful claim &gt; bob wins 50% of pool" time="0.027">
            <system-out>
contractBalance 215: undefined
contractBalance 228: undefined
contractBalance 242: undefined

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/sbtc/scenarios.test.ts" timestamp="2025-02-11T09:40:56.108Z" hostname="Mikes-MacBook-Pro.local" tests="19" failures="0" errors="0" skipped="0" time="0.462">
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; create binary market ok" time="0.017">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; create ok" time="0.016">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.019">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.019">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; resolve ok" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; claim loser ok" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="claiming errors &gt; claim winner ok" time="0.029">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="check actual claims vs expected for some scenarios &gt; Alice stake 100STX on YES, market resolves yes" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="check actual claims vs expected for some scenarios &gt; Alice stakes 100STX on yes, Bob 100STX on NO market resolves yes" time="0.024">
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="check actual claims vs expected for some scenarios &gt; Alice stakes 100 STX on YES, Bob stakes 50 STX on YES, Tom stakes 200 STX on NO, Annie stakes 20 STX on NO, market resolves NO" time="0.042">
            <system-out>
contractBalance: undefined
contractBalance: undefined

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="Alice stakes 100 STX on YES, Bob stakes 50 STX on YES, Tom stakes 200 STX on NO, Annie stakes 20 STX on NO, market resolves NO" time="0.03">
            <system-out>
contractBalance: undefined
contractBalance: undefined

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/scenarios.test.ts" name="Alice stakes 100 STX on YES, Bob stakes 50 STX on YES, Tom stakes 200 STX on NO, Annie stakes 20 STX on NO, market resolves NO" time="0.046">
            <system-out>
contractBalance: undefined
contractBalance: undefined
contractBalance: undefined
contractBalance 32: undefined
contractBalance 32: undefined

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/sbtc/staking.test.ts" timestamp="2025-02-11T09:40:56.109Z" hostname="Mikes-MacBook-Pro.local" tests="19" failures="0" errors="0" skipped="0" time="0.394">
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; err too few categories" time="0.016">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; create binary market ok" time="0.016">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; create ok" time="0.017">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.019">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; create and stake ok" time="0.019">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.018">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; resolve ok" time="0.022">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.023">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.025">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; claim loser ok" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="claiming errors &gt; claim winner ok" time="0.027">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="prediction errors &gt; user can&apos;t commit more than their balance" time="0.018">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="prediction errors &gt; err-already-concluded" time="0.02">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="prediction fees and stakes &gt; user transfers exact stake" time="0.021">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="prediction fees and stakes &gt; fees are collected up front from prediction stakes" time="0.02">
        </testcase>
        <testcase classname="tests/sbtc/staking.test.ts" name="prediction fees and stakes &gt; alice hedges yes and no" time="0.02">
        </testcase>
    </testsuite>
    <testsuite name="tests/voting/voting.test.ts" timestamp="2025-02-11T09:40:56.111Z" hostname="Mikes-MacBook-Pro.local" tests="25" failures="0" errors="0" skipped="0" time="0.62">
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; err too few categories" time="0.026">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; create binary market ok" time="0.02">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; create ok" time="0.018">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; create and stake not ok on unknown category" time="0.021">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; create and stake ok" time="0.021">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; res agent cannot stake" time="0.02">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; create and stake spread ok" time="0.023">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; resolve ok" time="0.023">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; resolve undisputed requires window to elapse" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; claim err-user-not-winner-or-claimed" time="0.024">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; claim loser ok" time="0.026">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="claiming errors &gt; claim winner ok" time="0.029">
            <system-out>
contractBalance : bde023-market-predicting : 2970

            </system-out>
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; err-disputer-must-have-stake" time="0.021">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; err-unauthorised - dao function" time="0.022">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; staker can create market vote" time="0.023">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; staker can create market vote" time="0.026">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; vote cant close before voting window" time="0.027">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; vote can close after voting window with no votes" time="0.032">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; vote cant vote after end" time="0.026">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; cant vote with more than current unlocked bdg balance" time="0.028">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; can vote before end" time="0.029">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; vote closes true with for votes" time="0.03">
        </testcase>
        <testcase classname="tests/voting/voting.test.ts" name="voting on resolution &gt; vote closes true with against votes" time="0.032">
        </testcase>
    </testsuite>
</testsuites>
